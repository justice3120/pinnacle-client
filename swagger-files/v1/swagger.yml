swagger: '2.0'
info:
  title: Pinnacle API
  version: "1.0.0"
host: api.pinnacle.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`.
security:
  - basicAuth: []
paths:
  /fixtures:
    get:
      summary: Returns all non-settled events.
      description: |
        Please note that it is possible that the event is in Get Fixtures response but not in Get Odds.
        This happens when the odds have not been set yet for the event.
        Please note that it is possible to receive the same exact response when using "since" parameter.
        This is rare and can be caused by internal updates of event's properties.
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: string
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
        - name: islive
          in: query
          description: |
            To retrieve ONLY live events set the value to islive =1.
            Any other value will result in retrieval of events regardless of their Live status

            * `0` - False
            * `1` - True
          required: false
          type: integer
          format: int32
          enum:
            - 0
            - 1
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetFixturesResponse'
  /fixtures/settled:
    get:
      summary: Returns fixtures settled in the last 24 hours
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: string
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSettledFixturesResponse'
  /fixtures/special:
    get:
      summary: Returns all non-settled specials (contests).
      description: |
        Please note that it is possible that the event is in Get Special Fixtures response but not in Get Special Odds.
        This happens when the odds have not been set yet for the event.
        Please note that it is possible to receive the same exact response when using "since" parameter.
        This is rare and can be caused by internal updates of event's properties.
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: string
        - name: category
          in: query
          description: Category of the special
          required: false
          type: string
        - name: eventId
          in: query
          description: Event id of the linked event
          required: false
          type: integer
          format: int64
        - name: specialId
          in: query
          description: Specific special Id
          required: false
          type: integer
          format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSpecialFixturesResponse'
  /fixtures/special/settled:
    get:
      summary: Returns special fixtures settled in the last 24 hours
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: string
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetFixturesResponse'
definitions:
  GetFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      league:
        type: array
        description: Contains a list of Leagues
        items:
          $ref: '#/definitions/League'
  GetSettledFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes `since` previous response
      league:
        type: array
        description: Contains a list of Leagues
        items:
          $ref: '#/definitions/League'
  GetSpecialFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      leagues:
        type: array
        description: Contains a list of Special Leagues
        items:
          $ref: '#/definitions/SpecialLeague'
  League:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: League ID
      events:
        type: array
        description: Contains a list of events
        items:
          $ref: '#/definitions/Event'
  SpecialLeague:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: League ID
      specials:
        type: array
        description: Contains a list of specials
        items:
          $ref: '#/definitions/Special'
  Event:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Event ID
      starts:
        type: string
        format: date-time
        description: Start time of the event in UTC
      home:
        type: string
        description: Home team name
      away:
        type: string
        description: Away team name
      rotNum:
        type: string
        description: Team1 rotation number
      liveStatus:
        type: integer
        format: int32
        description: |
          Indicates eventâ€™s live status

          * `0` - No live betting will be offered on this event.
          * `1` - Live betting event.
          * `2` - Live betting will be offered on this event.
        enum:
          - 0
          - 1
          - 2
      status:
        type: string
        description: |
          Status of the event

          * `H` - This status indicates that the lines are temporarily unavailable for betting.
          * `I` - This status indicates that one or more lines have a red circle (a lower maximum bet amount).
          * `O` - This is the starting status of a game. It means that the lines are open for betting.
        enum:
          - H
          - I
          - O
      parlayRestriction:
        type: integer
        format: int32
        description: |
          Parlay status of the event

          * `0` - Allowed to parlay, without restrictions.
          * `1` - Not allowed to parlay this event.
          * `2` - Allowed to parlay, with the restrictions. You can not have more than one leg from the same event in the parlay. All events with the same rot number are treated as the same event.
        enum:
          - 0
          - 1
          - 2
      homePitcher:
        type: string
        description: Home team pitcher. Only for baseball.
      awayPitcher:
        type: string
        description: Away team pitcher. Only for baseball.
      periods:
        type: array
        description: Contains a list of periods
        items:
          $ref: '#/definitions/Period'
  Special:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Special ID
      betType:
        type: string
        description: SPREAD
      name:
        type: string
        description: Special name
      date:
        type: string
        format: date-time
        description: Creation date and time of the special in UTC
      cutoff:
        type: string
        format: date-time
        description: Start time of the special in UTC
      category:
        type: string
        description: Category under which the special is recorded
      units:
        type: string
        description: Measurement in the context of the special. Applicable to Spread and Over/Under special bet types. For hockey specials this could be "goals"
      status:
        type: string
        description: |
          Status of the special

          * `H` - This status indicates that the lines are temporarily unavailable for betting.
          * `I` - This status indicates that one or more lines have a red circle (a lower maximum bet amount).
          * `O` - This is the starting status of a game. It means that the lines are open for betting.
        enum:
          - H
          - I
          - O
      contestants:
        type: array
        description: List of contestants
        items:
          $ref: '#/definitions/Contestant'
  Period:
    type: object
    properties:
      number:
        type: integer
        format: int32
        description: |
          This represents the period of the match. For example, for soccer we have:

          * `0` - Game
          * `1` - 1st Half
          * `2` - 2nd Half
      settlementId:
        type: integer
        format: int64
        description: |
          Unique id of the settlement. In case of a re-settlement, a new settlementId and settledAt will be generated.
      settledAt:
        type: string
        format: date-time
        description: Date and time when teh period was settled
      status:
        type: integer
        format: int32
        description: |
          Period settlement status

          * `1` - Event period is settled
          * `2` - Event period is re-settled
          * `3` - Event period is cancelled
          * `4` - Event period is re-settled as cancelled
          * `5` - Event is deleted
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
      team1Score:
        type: integer
        format: int32
        description: Team1 score
      team2Score:
        type: integer
        format: int32
        description: Team2 score
  Contestant:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Contestant ID
      name:
        type: string
        description: Contestant name
      rotNum:
        type: integer
        format: int32
        description: Rotation number
