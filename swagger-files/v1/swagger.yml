swagger: '2.0'
info:
  title: Pinnacle API
  version: "1.0.0"
host: api.pinnacle.com
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`.
security:
  - basicAuth: []
paths:
  /fixtures:
    get:
      summary: Returns all non-settled events.
      description: |
        Please note that it is possible that the event is in Get Fixtures response but not in Get Odds.
        This happens when the odds have not been set yet for the event.
        Please note that it is possible to receive the same exact response when using "since" parameter.
        This is rare and can be caused by internal updates of event's properties.
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
        - name: islive
          in: query
          description: |
            To retrieve ONLY live events set the value to islive =1.
            Any other value will result in retrieval of events regardless of their Live status

            * `0` - False
            * `1` - True
          required: false
          type: integer
          format: int32
          enum:
            - 0
            - 1
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetFixturesResponse'
  /fixtures/settled:
    get:
      summary: Returns fixtures settled in the last 24 hours
      tags:
        - Fixture
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSettledFixturesResponse'
  /fixtures/special:
    get:
      summary: Returns all non-settled specials (contests).
      description: |
        Please note that it is possible that the event is in Get Special Fixtures response but not in Get Special Odds.
        This happens when the odds have not been set yet for the event.
        Please note that it is possible to receive the same exact response when using "since" parameter.
        This is rare and can be caused by internal updates of event's properties.
      tags:
        - Fixture
        - Special
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: category
          in: query
          description: Category of the special
          required: false
          type: string
        - name: eventId
          in: query
          description: Event id of the linked event
          required: false
          type: integer
          format: int64
        - name: specialId
          in: query
          description: Specific special Id
          required: false
          type: integer
          format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSpecialFixturesResponse'
  /fixtures/special/settled:
    get:
      summary: Returns special fixtures settled in the last 24 hours
      tags:
        - Fixture
        - Special
      parameters:
        - name: sportId
          in: query
          description: The sport id for which to retrieve the fixutres
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous fixtures response.
            When since parameter is not provided, the fixtures are delayed up to 1 min to encourage the use of the parameter
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSettledSpecialFixturesResponse'
  /teaser/groups:
    get:
      summary: Returns all teaser groups.
      tags:
        - Teaser
      parameters:
        - name: oddsFormat
          in: query
          description: Format the odds are returned in.
          required: true
          type: string
          enum:
            - AMERICAN
            - DECIMAL
            - HONGKONG
            - INDONESIAN
            - MALAY
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetTeaserGroupsResponse'
  /odds:
    get:
      summary: Returns straight and parlay odds for all non-settled events.
      description: |
        Please note that it is possible that the event is in Get Fixtures response but not in Get Odds.
        This is happens when the odds have not been set yet for the event.
      tags:
        - Odds
      parameters:
        - name: sportId
          in: query
          description: The sportid for which to retrieve the odds.
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous odds response.
            When since parameter is not provided, the odds are delayed up to 1 min to encourage the use of the parameter.
            Please note that when using since parameter you will get in the response ONLY changed periods. If a period didnâ€™t have any changes it will not be in the response.
          required: false
          type: integer
          format: int64
        - name: islive
          in: query
          description: |
            To retrieve ONLY live events set the value to islive =1.
            Any other value will result in retrieval of events regardless of their Live status

            * `0` - False
            * `1` - True
          required: false
          type: integer
          format: int32
          enum:
            - 0
            - 1
        - name: oddsFormat
          in: query
          description: Format the odds are returned in.
          required: false
          type: string
          enum:
            - AMERICAN
            - DECIMAL
            - HONGKONG
            - INDONESIAN
            - MALAY
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetOddsResponse'
  /odds/teaser:
    get:
      summary: Returns odds for specified teaser.
      tags:
        - Odds
        - Teaser
      parameters:
        - name: teaserId
          in: query
          description: |
            Unique identifier.
            Teaser details can be retrieved from a call to Get Teaser Groups endpoint.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetTeaserOddsResponse'
  /odds/special:
    get:
      summary: Returns special odds for all non-settled events.
      description: |
        Please note that it is possible that the event is in Get Special Fixtures response but not in Get Special Odds.
        This happens when the odds have not been set for the event.
      tags:
        - Odds
        - Special
      parameters:
        - name: sportId
          in: query
          description: The sportid for which to retrieve the odds.
          required: true
          type: integer
          format: int32
        - name: leagueIds
          in: query
          description: The leagueIds array may contain a list of comma separated league ids.
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
            format: int64
        - name: since
          in: query
          description: |
            This is used to receive incremental updates. Use the value of last from previous odds response.
            When since parameter is not provided, the odds are delayed up to 1 min to encourage the use of the parameter.
            Please note that when using since parameter you will get in the response ONLY changed periods. If a period didnâ€™t have any changes it will not be in the response.
          required: false
          type: integer
          format: int64
        - name: specialId
          in: query
          description: Specific special id
          required: false
          type: integer
          format: int64
        - name: oddsFormat
          in: query
          description: Format in which we return the odds. Default is American.
          required: false
          type: string
          enum:
            - AMERICAN
            - DECIMAL
            - HONGKONG
            - INDONESIAN
            - MALAY
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSpecialOddsResponse'
  /client/balance:
    get:
      summary: Returns current client balance.
      tags:
        - Client
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetClientBalanceResponse'
  /line:
    get:
      summary: Returns latest line.
      tags:
        - Line
      parameters:
        - name: sportId
          in: query
          description: ""
          required: true
          type: integer
          format: int32
        - name: leagueId
          in: query
          description: ""
          required: true
          type: integer
          format: int64
        - name: eventId
          in: query
          description: ""
          required: true
          type: integer
          format: int64
        - name: periodNumber
          in: query
          description: |
            This represents the period of the match. For example, for soccer we have:

            * `0` - Game
            * `1` - 1st Half
            * `2` - 2nd Half
          required: true
          type: integer
          format: int32
        - name: betType
          in: query
          description: ""
          required: true
          type: string
          enum:
            - MONEYLINE
            - TEAM_TOTAL_POINTS
            - SPREAD
            - TOTAL_POINTS
            - SPECIAL
        - name: team
          in: query
          description: |
            Chosen team type.
            This is needed only for SPREAD, MONEYLINE and TEAM_TOTAL_POINTS bet types

            * `Draw` - Draw. This is used for MONEYLINE bet type only.
            * `Team1` - Team 1
            * `Team2` - Team 2
          required: false
          type: string
          enum:
            - Draw
            - Team1
            - Team2
        - name: side
          in: query
          description: |
            Chosen side.
            This is needed only for TOTAL_POINTS and TEAM_TOTAL_POINTS bet type
          required: false
          type: string
          enum:
            - OVER
            - UNDER
        - name: handicap
          in: query
          description: |
            This is needed for SPREAD, TOTAL_POINTS and TEAM_TOTAL_POINTS bet type
          required: false
          type: number
          format: float
        - name: oddsFormat
          in: query
          description: Format the odds are returned in.
          required: true
          type: string
          enum:
            - AMERICAN
            - DECIMAL
            - HONGKONG
            - INDONESIAN
            - MALAY
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetLineResponse'
  /line/parlay:
    post:
      summary: Returns parlay lines and calculate odds. Supports JSON format only.
      tags:
        - Line
        - Parlay
      parameters:
        - name: body
          in: body
          description: ""
          required: true
          schema:
            type: object
            required:
              - oddsFormat
              - legs
            properties:
              oddsFormat:
                type: string
                description: Format the odds are returned in.
                enum:
                  - AMERICAN
                  - DECIMAL
                  - HONGKONG
                  - INDONESIAN
                  - MALAY
              legs:
                type: array
                description: This is a collection of legs (the format of the object is described below)
                items:
                  type: object
                  required:
                    - uniqueLegId
                    - eventId
                    - legBetType
                    - periodNumber
                  properties:
                    uniqueLegId:
                      type: string
                      description: |
                        This unique id of the leg.
                        It used to identify and match leg in the response
                    eventId:
                      type: integer
                      format: int64
                      description: id of the event
                    legBetType:
                      type: string
                      description: Only SPREAD, MONEYLINE and TOTAL_POINTS are supported
                      enum:
                        - MONEYLINE
                        - SPREAD
                        - TOTAL_POINTS
                    team:
                      type: string
                      description: |
                        Chosen team type.
                        This is needed only for SPREAD and MONEYLINE bet types

                        * `Draw` - Draw. This is used for MONEYLINE bet type only.
                        * `Team1` - Team 1
                        * `Team2` - Team 2
                      enum:
                        - Draw
                        - Team1
                        - Team2
                    side:
                      type: string
                      description: Chosen side. This is needed only for TOTAL_POINTS bet type
                      enum:
                        - OVER
                        - UNDER
                    periodNumber:
                      type: integer
                      format: int32
                      description: |
                        This represents the period of the match. For example, for soccer we have:

                        * `0` -  Game
                        * `1` - 1st Half
                        * `2` - 2nd Half
                    handicap:
                      type: number
                      format: float
                      description: This is needed for SPREAD and TOTAL_POINTS bet type
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetParlayLinesResponse'
  /line/teaser:
    get:
      summary: Validates a teaser bet prior to submission. Returns bet limit and price on success.
      tags:
        - Line
        - Teaser
      parameters:
        - name: body
          in: body
          description: ""
          required: true
          schema:
            type: object
            required:
              - teaserId
              - oddsFormat
              - legs
            properties:
              teaserId:
                type: integer
                format: int64
                description: |
                  Unique identifier.
                  Teaser details can be retrieved from a call to Get Teaser Groups endpoint.
              oddsFormat:
                type: string
                description: Format the odds are returned in.
                enum:
                  - AMERICAN
                  - DECIMAL
                  - HONGKONG
                  - INDONESIAN
                  - MALAY
              legs:
                type: array
                description: This is a collection of legs (the format of the object is described below)
                items:
                  type: object
                  required:
                    - legId
                    - eventId
                    - betType
                    - periodNumber
                    - handicap
                  properties:
                    legId:
                      type: string
                      description: Client genereated GUID for uniquely identifying the leg.
                    eventId:
                      type: integer
                      format: int64
                      description: Unique identifier.
                    betType:
                      type: string
                      description: |
                        Type of bet.
                        Currently, only BET_TYPE.SPREAD and BET_TYPE.TOTAL_POINTS are supported.
                      enum:
                        - MONEYLINE
                        - TOTAL_POINTS
                    team:
                      type: string
                      description: |
                        Team being bet on for a spread line.
                        Currenlty, only TEAM_TYPE.Team1 and TEAM_TYPE.Team2 are supported.

                        * `Team1` - Team 1
                        * `Team2` - Team 2
                      enum:
                        - Team1
                        - Team2
                    side:
                      type: string
                      description: Side of a total line being bet on.
                      enum:
                        - OVER
                        - UNDER
                    periodNumber:
                      type: integer
                      format: int32
                      description: |
                        Period of the match that is being bet on.
                        Refer to Period Number lookup table.
                    handicap:
                      type: number
                      format: float
                      description: Number of points.
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetTeaserLinesResponse'
  /line/special:
    get:
      summary: Returns latest special line.
      tags:
        - Line
        - Special
      parameters:
        - name: specialId
          in: query
          description: Id of the special
          required: true
          type: integer
          format: int64
        - name: contestantId
          in: query
          description: Id of the contestant
          required: true
          type: integer
          format: int64
        - name: oddsFormat
          in: query
          description: Default is American
          required: false
          type: string
          enum:
            - AMERICAN
            - DECIMAL
            - HONGKONG
            - INDONESIAN
            - MALAY
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/GetSpecialLineResponse'
definitions:
  GetFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      league:
        type: array
        description: Contains a list of Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            events:
              type: array
              description: Contains a list of events
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Event ID
                  starts:
                    type: string
                    format: date-time
                    description: Start time of the event in UTC
                  home:
                    type: string
                    description: Home team name
                  away:
                    type: string
                    description: Away team name
                  rotNum:
                    type: string
                    description: Team1 rotation number
                  liveStatus:
                    type: integer
                    format: int32
                    description: |
                      Indicates eventâ€™s live status

                      * `0` - No live betting will be offered on this event.
                      * `1` - Live betting event.
                      * `2` - Live betting will be offered on this event.
                    enum:
                      - 0
                      - 1
                      - 2
                  status:
                    type: string
                    description: |
                      Status of the event

                      * `H` - This status indicates that the lines are temporarily unavailable for betting.
                      * `I` - This status indicates that one or more lines have a red circle (a lower maximum bet amount).
                      * `O` - This is the starting status of a game. It means that the lines are open for betting.
                    enum:
                      - H
                      - I
                      - O
                  parlayRestriction:
                    type: integer
                    format: int32
                    description: |
                      Parlay status of the event

                      * `0` - Allowed to parlay, without restrictions.
                      * `1` - Not allowed to parlay this event.
                      * `2` - Allowed to parlay, with the restrictions. You can not have more than one leg from the same event in the parlay. All events with the same rot number are treated as the same event.
                    enum:
                      - 0
                      - 1
                      - 2
                  homePitcher:
                    type: string
                    description: Home team pitcher. Only for baseball.
                  awayPitcher:
                    type: string
                    description: Away team pitcher. Only for baseball.
  GetSettledFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes `since` previous response
      leagues:
        type: array
        description: Contains a list of Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            events:
              type: array
              description: Contains a list of events
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Event ID
                  periods:
                    type: array
                    description: Contains a list of periods
                    items:
                      type: object
                      properties:
                        number:
                          type: integer
                          format: int32
                          description: |
                            This represents the period of the match. For example, for soccer we have:

                            * `0` - Game
                            * `1` - 1st Half
                            * `2` - 2nd Half
                        settlementId:
                          type: integer
                          format: int64
                          description: |
                            Unique id of the settlement. In case of a re-settlement, a new settlementId and settledAt will be generated.
                        settledAt:
                          type: string
                          format: date-time
                          description: Date and time when teh period was settled
                        status:
                          type: integer
                          format: int32
                          description: |
                            Period settlement status

                            * `1` - Event period is settled
                            * `2` - Event period is re-settled
                            * `3` - Event period is cancelled
                            * `4` - Event period is re-settled as cancelled
                            * `5` - Event is deleted
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                        team1Score:
                          type: integer
                          format: int32
                          description: Team1 score
                        team2Score:
                          type: integer
                          format: int32
                          description: Team2 score
  GetSpecialFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      leagues:
        type: array
        description: Contains a list of Special Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            specials:
              type: array
              description: Contains a list of specials
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Special ID
                  betType:
                    type: string
                    description: SPREAD
                  name:
                    type: string
                    description: Special name
                  date:
                    type: string
                    format: date-time
                    description: Creation date and time of the special in UTC
                  cutoff:
                    type: string
                    format: date-time
                    description: Start time of the special in UTC
                  category:
                    type: string
                    description: Category under which the special is recorded
                  units:
                    type: string
                    description: Measurement in the context of the special. Applicable to Spread and Over/Under special bet types. For hockey specials this could be "goals"
                  status:
                    type: string
                    description: |
                      Status of the special

                      * `H` - This status indicates that the lines are temporarily unavailable for betting.
                      * `I` - This status indicates that one or more lines have a red circle (a lower maximum bet amount).
                      * `O` - This is the starting status of a game. It means that the lines are open for betting.
                    enum:
                      - H
                      - I
                      - O
                  contestants:
                    type: array
                    description: List of contestants
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: Contestant ID
                        name:
                          type: string
                          description: Contestant name
                        rotNum:
                          type: integer
                          format: int32
                          description: Rotation number
  GetSettledSpecialFixturesResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      leagues:
        type: array
        description: Contains a list of Special Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            specials:
              type: array
              description: Contains a list of specials
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Special ID
                  status:
                    type: integer
                    format: int32
                    description: |
                      Status of settled special fixture

                      * `1` - Event period is settled
                      * `2` - Event period is re-settled
                      * `3` - Event period is cancelled
                      * `4` - Event period is re-settled as cancelled
                      * `5` - Event is deleted
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                  settlementId:
                    type: integer
                    format: int64
                    description: Id of the settlement
                  settledAt:
                    type: string
                    format: date-time
                    description: Date and Time of the settlement in UTC
  GetTeaserGroupsResponse:
    type: object
    properties:
      teaserGroups:
        type: array
        description: A collection of TeaserGroups containing available teasers.
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier.
            name:
              type: string
              description: Human friendly name.
            teasers:
              type: array
              description: A collection of Teaser.
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Unique identifier.
                  description:
                    type: string
                    description: Human friendly description.
                  sportId:
                    type: integer
                    format: int32
                    description: |
                      Unique identifier.
                      Sport details can be retrieved from a call to Get Sports endpoint.
                  minLegs:
                    type: integer
                    format: int32
                    description: Minimum number of legs that must be selected.
                  maxLegs:
                    type: integer
                    format: int32
                    description: Maximum number of legs that can be selected.
                  sameEventOnly:
                    type: boolean
                    description: If true then all legs must be from the same event, otherwise legs can be from different events.
                  payouts:
                    type: array
                    description: A collection of Payout indicating all possible payout combinations.
                    items:
                      type: object
                      properties:
                        numberOfLegs:
                          type: integer
                          format: int32
                          description: Number of legs that must be bet and won on to get the associated price.
                        price:
                          type: number
                          format: float
                          description: Price of the bet given the specified number of legs.
                  league:
                    type: array
                    description: A collection of Leagues available to the teaser.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: |
                            Unique identifier.
                            League details can be retrieved from a call to Get Leagues endpoint.
                        spread:
                          type: object
                          description: The number of points the spread line will be teased by.
                          properties:
                            points:
                              type: number
                              format: float
                              description: Number of points the main spread line will be teased for the given league.
                        total:
                          type: object
                          description: The number of points the total line will be teased by.
                          properties:
                            points:
                              type: number
                              format: float
                              description: Number of points the main total line will be teased for the given league.
  GetOddsResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      leagues:
        type: array
        description: Contains a list of Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            events:
              type: array
              description: Contains a list of events
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Event ID
                  periods:
                    type: array
                    description: Contains a list of periods
                    items:
                      type: object
                      properties:
                        lineId:
                          type: integer
                          format: int64
                          description: Line ID
                        number:
                          type: integer
                          format: int32
                          description: |
                            This represents the period of the match. For example, for soccer we have:

                            * `0` - Game
                            * `1` - 1st Half
                            * `2` - 2nd Half
                        cutoff:
                          type: string
                          format: date-time
                          description: Periodâ€™s wagering cut-off date
                        spreads:
                          type: array
                          description: Container for spread odds
                          items:
                            type: object
                            properties:
                              altLineId:
                                type: integer
                                format: int64
                                description: This is present only if itâ€™s alternative line.
                              hdp:
                                type: number
                                format: float
                                description: Home team handicap
                              away:
                                type: number
                                format: float
                                description: Away team price
                              home:
                                type: number
                                format: float
                                description: Away team price
                        totals:
                          type: array
                          description: Container for total odds
                          items:
                            type: object
                            properties:
                              altLineId:
                                type: integer
                                format: int64
                                description: This is present only if itâ€™s alternative line.
                              points:
                                type: number
                                format: float
                                description: Total points
                              over:
                                type: number
                                format: float
                                description: Over price
                              under:
                                type: number
                                format: float
                                description: Under price
                        moneyLine:
                          type: object
                          description: Container for moneyLine odds
                          properties:
                            home:
                              type: number
                              format: float
                              description: Away team price
                            away:
                              type: number
                              format: float
                              description: Home team price
                            draw:
                              type: number
                              format: float
                              description: Draw price. This is present only for events we offer price for draw.
                        teamTotal:
                          type: object
                          description: Container for team total points
                          properties:
                            away:
                              type: number
                              format: float
                              description: Away team total points
                            home:
                              type: number
                              format: float
                              description: Home team total points
                        maxSpread:
                          type: number
                          format: float
                          description: Maximum spread bet. Only in straight odds response.
                        maxTotal:
                          type: number
                          format: float
                          description: Maximum total points bet. Only in straight odds response.
                        maxMoneyLine:
                          type: number
                          format: float
                          description: Maximum moneyline bet. Only in straight odds response.
                        maxTeamTotal:
                          type: number
                          format: float
                          description: Maximum team total points bet. Only in straight odds response.
                  awayScore:
                    type: number
                    format: float
                    description: Away team score. Only for live soccer events.
                  homeScore:
                    type: number
                    format: float
                    description: Home team score. Only for live soccer events.
                  awayRedCards:
                    type: integer
                    format: int32
                    description: Away team red cards. Only for live soccer events.
                  homeRedCards:
                    type: integer
                    format: int32
                    description: Home team red cards. Only for live soccer events.
  GetTeaserOddsResponse:
    type: object
    properties:
      teaserId:
        type: integer
        format: int64
        description: |
          Unique identifier.
          Teaser details can be retrieved from a call to Get Teaser Groups endpoint.
      sportId:
        type: integer
        format: int32
        description: |
          Unique identifier.
          Sport details can be retrieved from a call to Get Sports endpoint.
      leagues:
        type: array
        description: Contains a list of Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: |
                Unique identifier.
                League details can be retrieved from a call to Get Leagues endpoint.
            events:
              type: array
              description: Contains a list of events
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Unique identifier.
                  periods:
                    type: array
                    description: A collection of Period indicating the period numbers available for betting.
                    items:
                      type: object
                      properties:
                        lineId:
                          type: integer
                          format: int64
                          description: Unique identifier.
                        number:
                          type: integer
                          format: int32
                          description: |
                            Period of the match that is being bet on.
                            Refer to Period Number lookup table.
                        spread:
                          type: object
                          description: Teased spread line.
                          properties:
                            maxBet:
                              type: number
                              format: float
                              description: Maximum bet amount.
                            homeHdp:
                              type: number
                              format: float
                              description: |
                                Home team handicap.
                                Refer to Get Fixtures endpoint to determine home and away teams.
                            awayHdp:
                              type: number
                              format: float
                              description: |
                                Away team handicap.
                                Refer to Get Fixtures endpoint to determine home and away teams.
                        total:
                          type: object
                          description: Teased total line.
                          properties:
                            maxBet:
                              type: number
                              format: float
                              description: Maximum bet amount.
                            overPoints:
                              type: number
                              format: float
                              description: Over points.
                            underPoints:
                              type: number
                              format: float
                              description: Under points.
  GetSpecialOddsResponse:
    type: object
    properties:
      sportId:
        type: integer
        format: int32
        description: Same as requested sport Id
      last:
        type: integer
        format: int64
        description: Use this value for the subsequent requests for since query parameter to get just the changes since previous response
      leagues:
        type: array
        description: Contains a list of Leagues
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: League ID
            specials:
              type: array
              description: Contains a list of specials
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Event ID
                  maxRisk:
                    type: number
                    format: float
                    description: Max risk bet set for the special
                  contestantLines:
                    type: array
                    description: Contais a list of contestant lines
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: Contestant id
                        lineId:
                          type: integer
                          format: int64
                          description: Line Id
                        price:
                          type: number
                          format: float
                          description: Contestant price
                        handicap:
                          type: number
                          format: float
                          description: Handicap value for the given contestant
  GetClientBalanceResponse:
    type: object
    properties:
      availableBalance:
        type: number
        format: float
        description: Amount available for betting
      outstandingTransactions:
        type: number
        format: float
        description: Sum of not yet settled bet amounts
      givenCredit:
        type: number
        format: float
        description: Clientâ€™s credit
      currency:
        type: string
        description: Clientâ€™s currency code
  GetLineResponse:
    type: object
    properties:
      status:
        type: string
        description: |
          If the value is NOT_EXISTS, than this will be the only parameter in the response.
          All other params would be empty.

          * `NOT_EXISTS` - Line not offered anymore
          * `SUCCESS` - OK
        enum:
          - NOT_EXISTS
          - SUCCESS
      price:
        type: number
        format: float
        description: Latest price
      lineId:
        type: integer
        format: int64
        description: Line identification needed to place a bet
      altLineId:
        type: integer
        format: int64
        description: |
          This would be needed to place the bet if the handicap is on alternate line,
          otherwise it will not be in the response.
      team1Score:
        type: integer
        format: int32
        description: Team 1 score. Applicable to soccer only
      team2Score:
        type: integer
        format: int32
        description: Team 2 score. Applicable to soccer only
      team1RedCards:
        type: integer
        format: int32
        description: Team 1 red cards. Applicable to soccer only.
      team2RedCards:
        type: integer
        format: int32
        description: Team 2 red cards. Applicable to soccer only.
      maxRiskStake:
        type: number
        format: float
        description: Maximum bettable risk amount
      minRiskStake:
        type: number
        format: float
        description: Minimum bettable risk amount
      maxWinStake:
        type: number
        format: float
        description: Maximum bettable win amount
      minWinStake:
        type: number
        format: float
        description: Minimum bettable win amount
      effectiveAsOf:
        type: string
        format: date-time
        description: Line is effective as of this date and time
  GetParlayLinesResponse:
    type: object
    properties:
      status:
        type: string
        description: |
          Indicates whether the teaser is valid or not.

          * `PROCESSED_WITH_ERROR` - Teaser contains error(s).
          * `VALID` - Teaser is valid.
        enum:
          - PROCESSED_WITH_ERROR
          - VALID
      error:
        type: string
        description: |
          If Status is PROCESSED_WITH_ERROR , error will be in the response

          * `ABOVE_MAX_BET_AMOUNT` - Stake is above allowed maximum amount
          * `ALL_BETTING_CLOSED` - Betting is not allowed at this moment
          * `BELOW_MIN_BET_AMOUNT` - Stake is below allowed minimum amount
          * `BLOCKED_BETTING` - Customer is an agent
          * `BLOCKED_CLIENT` - Client is no longer active
          * `INSUFFICIENT_FUNDS` - Bet is submitted by a client with insufficient funds
          * `INVALID_COUNTRY` - Client country is not allowed for betting
          * `INVALID_LEGS` - One or more legs are invalid
          * `INVALID_ODDS_FORMAT` - If a bet was submitted with the odds format that is not allowed for the client
          * `INVALID_ROUND_ROBIN_OPTIONS` - Round robin options are invalid (i.e. does not match with number of legs)
          * `ROUND_ROBIN_DISALLOWED` - Round robin is disallowed for one of the leagues
          * `TOO_MANY_LEGS` - Maximum of 10 legs can be specified
          * `TOO_FEW_LEGS` - At least 2 legs are required for Parlay
        enum:
          - ABOVE_MAX_BET_AMOUNT
          - ALL_BETTING_CLOSED
          - BELOW_MIN_BET_AMOUNT
          - BLOCKED_BETTING
          - BLOCKED_CLIENT
          - INSUFFICIENT_FUNDS
          - INVALID_COUNTRY
          - INVALID_LEGS
          - INVALID_ODDS_FORMAT
          - INVALID_ROUND_ROBIN_OPTIONS
          - ROUND_ROBIN_DISALLOWED
          - TOO_MANY_LEGS
          - TOO_FEW_LEGS
      maxRiskStake:
        type: number
        format: float
        description: Minimum bet amount for WIN_RISK_TYPE.RISK.
      minRiskStake:
        type: number
        format: float
        description: Maximum bet amount for WIN_RISK_TYPE.RISK.
      roundRobinOptionWithOdds:
        type: array
        description: |
          Provides array with all acceptable Round Robin options with parlay odds for that option
        items:
          type: object
          properties:
            RoundRobinOption:
              type: string
              description: |
                Round Robin option

                * `Parlay` - Single parlay that include all wagers (No Round Robin)
                * `TwoLegRoundRobin` - Multiple parlays having 2 wagers each (round robin style). Can be used if number of legs is greater or equal to 3
                * `ThreeLegRoundRobin` - Multiple parlays having 3 wagers each (round robin style). Can be used if number of legs is greater or equal to 3
                * `FourLegRoundRobin` - Multiple parlays having 4 wagers each (round robin style). Can be used if number of legs is greater or equal to 4
                * `FiveLegRoundRobin` - Multiple parlays having 5 wagers each (round robin style). Can be used if number of legs is greater or equal to 5
                * `SixLegRoundRobin` - Multiple parlays having 6 wagers each (round robin style). Can be used if number of legs is greater or equal to 6
                * `SevenLegRoundRobin` - Multiple parlays having 7 wagers each (round robin style). Can be used if number of legs is greater or equal to 7
                * `EightLegRoundRobin` - Multiple parlays having 8 wagers each (round robin style). Can be used if number of legs is  equal to 8
              enum:
                - Parlay
                - TwoLegRoundRobin
                - ThreeLegRoundRobin
                - FourLegRoundRobin
                - FiveLegRoundRobin
                - SixLegRoundRobin
                - SevenLegRoundRobin
                - EightLegRoundRobin
            Odds:
              type: number
              format: float
              description: Odds for Round Robin option in requested Odds forma
      legs:
        type: array
        description: Collection of Leg.
        items:
          type: object
          properties:
            status:
              type: string
              description: |
                Indicates whether the teaser is valid or not.

                * `PROCESSED_WITH_ERROR` - Teaser contains error(s).
                * `VALID` - Teaser is valid.
              enum:
                - PROCESSED_WITH_ERROR
                - VALID
            errorCode:
              type: string
              description: |
                If Status is PROCESSED_WITH_ERROR, errorCode will be in the response

                * `CANNOT_PARLAY_LIVE_GAME` - The wager is placed on Live game
                * `CORRELATED` - The leg is correlated with another one
                * `EVENT_NO_LONGER_AVAILABLE_FOR_BETTING` - The event is no longer offered for Parlays
                * `EVENT_NOT_OFFERED_FOR_PARLAY` - The event is not offered for Parlays
                * `INVALID_EVENT` - Live betting is not allowed at this moment
                * `INVALID_LEG_BET_TYPE` - Leg bet type is not accepted for Parlays, Accepted values are: SPREAD, MONEYLINE, TOTAL_POINTS
                * `INVALID_PARLAY_BET` - The leg did not validated due to error on Parlay Bet. Check the error PlaceParlayBet response for error details
                * `LINE_CHANGED` - Bet is submitted on a line that has changed
                * `LINE_DOES_NOT_BELONG_TO_EVENT` - LineId does not match the EventId specified in the request
                * `LISTED_PITCHERS_SELECTION_ERROR` - If bet was submitted with pitcher1MustStart and/or pitcher2MustStart parameters with values that are not allowed
                * `ODDS_NO_LONGER_OFFERED_FOR_PARLAY_1` - Due to line change odds are not offered for Parlay anymore
                * `ODDS_NO_LONGER_OFFERED_FOR_PARLAY_2` - Due to line change odds are not offered for Parlay anymore
                * `ODDS_NO_LONGER_OFFERED_FOR_PARLAY_3` - Due to line change odds are not offered for Parlay anymore
                * `OFFLINE_EVENT` - Bet is submitted on an event that is offline or with incorrect lineId
                * `PAST_CUTOFFTIME` - Bet is submitted on a game after the betting cutoff time
                * `SYSTEM_ERROR_1` - Unexpected error or System error
                * `SYSTEM_ERROR_2` - Unexpected error or System error
                * `SYSTEM_ERROR_3` - Unexpected error or System error
              enum:
                - CANNOT_PARLAY_LIVE_GAME
                - CORRELATED
                - EVENT_NO_LONGER_AVAILABLE_FOR_BETTING
                - EVENT_NOT_OFFERED_FOR_PARLAY
                - INVALID_EVENT
                - INVALID_LEG_BET_TYPE
                - INVALID_PARLAY_BET
                - LINE_CHANGED
                - LINE_DOES_NOT_BELONG_TO_EVENT
                - LISTED_PITCHERS_SELECTION_ERROR
                - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_1
                - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_2
                - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_3
                - OFFLINE_EVENT
                - PAST_CUTOFFTIME
                - SYSTEM_ERROR_1
                - SYSTEM_ERROR_2
                - SYSTEM_ERROR_3
            legId:
              type: string
              description: Echo of the legId from the request
            correlatedLegs:
              type: array
              description: If errorCode is CORRELATED will contain legIds of all correlated legs
              items:
                type: string
            lineId:
              type: integer
              format: int64
              description: Line identification that bet will be placed on
            altLineId:
              type: integer
              format: int64
              description: If Leg will be placed on Alternate Line the Id of that line will be returned
            price:
              type: number
              format: float
              description: Current price of the line
  GetTeaserLinesResponse:
    type: object
    properties:
      code:
        type: string
        description: |
          Code identifying an error that occurred.

          * `INVALID_REQUEST_DATA` - Generic error code indicating that there is something wrong in the request. Refer to associated message containing further details.
        enum:
          - INVALID_REQUEST_DATA
      message:
        type: string
        description: Human friendly error message.
      status:
        type: string
        description: |
          Indicates whether the teaser is valid or not.

          * `PROCESSED_WITH_ERROR` - Teaser contains error(s).
          * `VALID` - Teaser is valid.
        enum:
          - PROCESSED_WITH_ERROR
          - VALID
      errorCode:
        type: string
        description: |
          Not present if status != TEASER_LINES_STATUS.PROCESSED_WITH_ERROR.

          * `INVALID_LEGS` - One or more of the legs is invalid.
          * `SAME_EVENT_ONLY_REQUIRED` - Teaser specified requires that all legs are from the same event.
          * `TEASER_DISABLED` - Teaser has been disabled and cannot be bet on.
          * `TEASER_DOES_NOT_EXIST` - The teaser identifier could requeted could not be found.
          * `TOO_FEW_LEGS` - You do not meet the minimum number of legs requirement for the teaser specified.
          * `TOO_MANY_LEGS` - You are above the maximum number of legs for the teaser specified.
          * `UNKNOWN` - An unknown error has occured.
        enum:
          - INVALID_LEGS
          - SAME_EVENT_ONLY_REQUIRED
          - TEASER_DISABLED
          - TEASER_DOES_NOT_EXIST
          - TOO_FEW_LEGS
          - TOO_MANY_LEGS
          - UNKNOWN
      price:
        type: number
        format: float
        description: Price for the bet.
      maxRiskStake:
        type: number
        format: float
        description: Minimum bet amount for WIN_RISK_TYPE.RISK.
      minRiskStake:
        type: number
        format: float
        description: Maximum bet amount for WIN_RISK_TYPE.RISK.
      maxWinStake:
        type: number
        format: float
        description: Minimum bet amount for WIN_RISK_TYPE.WIN.
      minWinStake:
        type: number
        format: float
        description: Maximum bet amount for WIN_RISK_TYPE.WIN.
      legs:
        type: array
        description: Collection of Leg.
        items:
          type: object
          properties:
            status:
              type: string
              description: |
                Indicates whether the teaser is valid or not.

                * `PROCESSED_WITH_ERROR` - Teaser contains error(s).
                * `VALID` - Teaser is valid.
              enum:
                - PROCESSED_WITH_ERROR
                - VALID
            errorCode:
              type: string
              description: |
                Not present if status != TEASER_LINES_STATUS. PROCESSED_WITH_ERROR.

                * `EVENT_NOT_FOUND` - The event specified could not be found.
                * `POINTS_NO_LONGER_AVAILABLE` - The points requested are no longer available. This means that the lines a moved.
                * `UNKNOWN` - An unknown error has occured.
                * `WAGER_TYPE_NOT_VALID_FOR_TEASER` - The specified wager type is not valid for teasers.
              enum:
                - EVENT_NOT_FOUND
                - POINTS_NO_LONGER_AVAILABLE
                - UNKNOWN
                - WAGER_TYPE_NOT_VALID_FOR_TEASER
            legId:
              type: string
              description: Client genereated GUID that was provided in request.
            lineId:
              type: integer
              format: int64
              description: Unique identifier.
  GetSpecialLineResponse:
    type: object
    properties:
      status:
        type: string
        description: |
          If the value is NOT_EXISTS, than this will be the only parameter in the response.
          All other params would be empty.

          * `NOT_EXISTS` - Line not offered anymore
          * `SUCCESS` - OK
        enum:
          - NOT_EXISTS
          - SUCCESS
      specialId:
        type: integer
        format: int64
        description: Echo of the requested special id
      contestantId:
        type: integer
        format: int64
        description: Echo of the requested contestant id
      price:
        type: number
        format: float
        description: Latest price
      lineId:
        type: integer
        format: int64
        description: Line identification needed to place a bet
      maxRiskStake:
        type: number
        format: float
        description: Maximum bettable risk amount
      minRiskStake:
        type: number
        format: float
        description: Minimum bettable risk amount
      maxWinStake:
        type: number
        format: float
        description: Maximum bettable win amount
      minWinStake:
        type: number
        format: float
        description: Minimum bettable win amount
      handicap:
        type: number
        format: float
        description: Handicap, if present
